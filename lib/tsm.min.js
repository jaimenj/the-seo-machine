"use strict";let tsm_interval_id,tsm_status="stopped";function tsmOnLoadMain(){console.log("Loading The SEO Machine view.."),jQuery("#tsm-datatable tfoot th").each((function(){jQuery(this).text();jQuery(this).html('<input type="text" placeholder="Filtrar.." />')}));let t=document.getElementById("tsm-datatable").dataset.ajax_datatables_server_processing_url;jQuery("#tsm-datatable").DataTable({dom:'<"float-left"i><"float-right"f>t<"float-left"l>B<"float-right"p><"clearfix">',responsive:!0,order:[[0,"desc"]],buttons:["csv","excel","pdf"],initComplete:function(){this.api().columns().every((function(){let t=this;jQuery("input",this.footer()).on("keyup change",(function(){t.search()!==this.value&&t.search(this.value).draw()}))}))},processing:!0,serverSide:!0,ajax:{url:t,type:"POST"},columnDefs:[{name:"id",targets:0},{name:"url",targets:1}]});console.log("Loaded The SEO Machine view!")}function tsmStudySite(){console.log("Starting study site.."),document.getElementById("tsm-btn-study-site").innerHTML="Stop",document.getElementById("tsm-btn-study-site").classList.add("tsm-button-studying");let t=document.getElementById("quantity_per_batch").value,e=document.getElementById("time_between_batches").value;console.log("Quantity per batch: "+t+", time between batches: "+e),tsm_interval_id=setInterval(tsmStudySiteSendAjax,1e3*e),tsm_status="studying"}function tsmStudySiteSendAjax(){document.getElementById("tsm-box-study-site-status").innerHTML="Processing..";let t=new XMLHttpRequest;t.onreadystatechange=function(e){4===t.readyState&&(document.getElementById("tsm-box-study-site-status").innerHTML="Studying with response: "+t.responseText,t.responseText.includes("finished")&&tsmStopAll())},t.open("POST","/wp-admin/admin-ajax.php"),t.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),t.send("action=tsm_do_batch")}function tsmStopAll(){clearInterval(tsm_interval_id),document.getElementById("tsm-btn-study-site").innerHTML="Study Site",document.getElementById("tsm-btn-study-site").classList.remove("tsm-button-studying"),tsm_status="stopped"}window.addEventListener("load",()=>{"undefined"!=typeof weAreInTheSeoMachine&&(tsmOnLoadMain(),document.getElementById("tsm-btn-study-site").addEventListener("click",(function(){"stopped"==tsm_status?tsmStudySite():tsmStopAll()})))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRzbS5qcyJdLCJuYW1lcyI6WyJ0c21faW50ZXJ2YWxfaWQiLCJ0c21fc3RhdHVzIiwidHNtT25Mb2FkTWFpbiIsImNvbnNvbGUiLCJsb2ciLCJqUXVlcnkiLCJlYWNoIiwidGhpcyIsInRleHQiLCJodG1sIiwiYWpheERhdGF0YWJsZXNTZXJ2ZXJQcm9jZXNzaW5nVXJsIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImRhdGFzZXQiLCJhamF4X2RhdGF0YWJsZXNfc2VydmVyX3Byb2Nlc3NpbmdfdXJsIiwiRGF0YVRhYmxlIiwiZG9tIiwicmVzcG9uc2l2ZSIsIm9yZGVyIiwiYnV0dG9ucyIsImluaXRDb21wbGV0ZSIsImFwaSIsImNvbHVtbnMiLCJldmVyeSIsInRoYXQiLCJmb290ZXIiLCJvbiIsInNlYXJjaCIsInZhbHVlIiwiZHJhdyIsInByb2Nlc3NpbmciLCJzZXJ2ZXJTaWRlIiwiYWpheCIsInVybCIsInR5cGUiLCJjb2x1bW5EZWZzIiwibmFtZSIsInRhcmdldHMiLCJ0c21TdHVkeVNpdGUiLCJpbm5lckhUTUwiLCJjbGFzc0xpc3QiLCJhZGQiLCJxdWFudGl0eV9wZXJfYmF0Y2giLCJ0aW1lX2JldHdlZW5fYmF0Y2hlcyIsInNldEludGVydmFsIiwidHNtU3R1ZHlTaXRlU2VuZEFqYXgiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlc3BvbnNlIiwicmVhZHlTdGF0ZSIsInJlc3BvbnNlVGV4dCIsImluY2x1ZGVzIiwidHNtU3RvcEFsbCIsIm9wZW4iLCJzZXRSZXF1ZXN0SGVhZGVyIiwic2VuZCIsImNsZWFySW50ZXJ2YWwiLCJyZW1vdmUiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwid2VBcmVJblRoZVNlb01hY2hpbmUiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBSUEsZ0JBQ0FDLFdBQWEsVUFHakIsU0FBU0MsZ0JBQ0xDLFFBQVFDLElBQUksa0NBRVpDLE9BQU8sMkJBQTJCQyxNQUFNLFdBQ3hCRCxPQUFPRSxNQUFNQyxPQUV6QkgsT0FBT0UsTUFBTUUsS0FBTSxvREFHdkIsSUFBSUMsRUFBb0NDLFNBQVNDLGVBQWUsaUJBQWlCQyxRQUFRQyxzQ0FDN0VULE9BQU8sa0JBQWtCVSxVQUFVLENBQzNDQyxJQUFLLCtFQUNMQyxZQUFZLEVBQ1pDLE1BQU8sQ0FBQyxDQUFFLEVBQUcsU0FDYkMsUUFBUyxDQUFDLE1BQU8sUUFBUyxPQUMxQkMsYUFBYyxXQUNWYixLQUFLYyxNQUFNQyxVQUFVQyxPQUFPLFdBQ3hCLElBQUlDLEVBQU9qQixLQUVYRixPQUFRLFFBQVNFLEtBQUtrQixVQUFXQyxHQUFJLGdCQUFnQixXQUM1Q0YsRUFBS0csV0FBYXBCLEtBQUtxQixPQUN4QkosRUFDS0csT0FBUXBCLEtBQUtxQixPQUNiQyxjQUtyQkMsWUFBWSxFQUNaQyxZQUFZLEVBQ1pDLEtBQU0sQ0FDRkMsSUFBS3ZCLEVBQ0x3QixLQUFNLFFBRVZDLFdBQVksQ0FDUixDQUFFQyxLQUFRLEtBQU1DLFFBQVcsR0FDM0IsQ0FBRUQsS0FBUSxNQUFPQyxRQUFXLE1BSXBDbEMsUUFBUUMsSUFBSSxnQ0FHaEIsU0FBU2tDLGVBQ0xuQyxRQUFRQyxJQUFJLHlCQUNaTyxTQUFTQyxlQUFlLHNCQUFzQjJCLFVBQVksT0FDMUQ1QixTQUFTQyxlQUFlLHNCQUFzQjRCLFVBQVVDLElBQUksdUJBRTVELElBQUlDLEVBQXFCL0IsU0FBU0MsZUFBZSxzQkFBc0JnQixNQUNuRWUsRUFBdUJoQyxTQUFTQyxlQUFlLHdCQUF3QmdCLE1BQzNFekIsUUFBUUMsSUFBSSx1QkFBeUJzQyxFQUFxQiwyQkFBNkJDLEdBRXZGM0MsZ0JBQWtCNEMsWUFBWUMscUJBQTZDLElBQXZCRixHQUNwRDFDLFdBQWEsV0FHakIsU0FBUzRDLHVCQUNMbEMsU0FBU0MsZUFBZSw2QkFBNkIyQixVQUFZLGVBRWpFLElBQUlPLEVBQU0sSUFBSUMsZUFFZEQsRUFBSUUsbUJBQXFCLFNBQVVDLEdBQ1IsSUFBbkJILEVBQUlJLGFBQ0p2QyxTQUFTQyxlQUFlLDZCQUE2QjJCLFVBQVksMkJBQTZCTyxFQUFJSyxhQUMvRkwsRUFBSUssYUFBYUMsU0FBUyxhQUN6QkMsZUFLWlAsRUFBSVEsS0FBSyxPQUFRLDRCQUNqQlIsRUFBSVMsaUJBQWlCLGVBQWdCLG9EQUNyQ1QsRUFBSVUsS0FBSyx1QkFHYixTQUFTSCxhQUNMSSxjQUFjekQsaUJBQ1ZXLFNBQVNDLGVBQWUsc0JBQXNCMkIsVUFBWSxhQUMxRDVCLFNBQVNDLGVBQWUsc0JBQXNCNEIsVUFBVWtCLE9BQU8sdUJBQy9EekQsV0FBYSxVQUlyQjBELE9BQU9DLGlCQUFpQixPQUFRLEtBQ1Esb0JBQXpCQyx1QkFDUDNELGdCQUNBUyxTQUFTQyxlQUFlLHNCQUFzQmdELGlCQUFpQixTQUFTLFdBQ2xELFdBQWQzRCxXQUNBcUMsZUFFQWUiLCJmaWxlIjoidHNtLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5sZXQgdHNtX2ludGVydmFsX2lkXG5sZXQgdHNtX3N0YXR1cyA9ICdzdG9wcGVkJ1xuXG5cbmZ1bmN0aW9uIHRzbU9uTG9hZE1haW4oKSB7XG4gICAgY29uc29sZS5sb2coJ0xvYWRpbmcgVGhlIFNFTyBNYWNoaW5lIHZpZXcuLicpXG5cbiAgICBqUXVlcnkoJyN0c20tZGF0YXRhYmxlIHRmb290IHRoJykuZWFjaCggZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgdGl0bGUgPSBqUXVlcnkodGhpcykudGV4dCgpXG5cbiAgICAgICAgalF1ZXJ5KHRoaXMpLmh0bWwoICc8aW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkZpbHRyYXIuLlwiIC8+JyApXG4gICAgfSlcblxuICAgIGxldCBhamF4RGF0YXRhYmxlc1NlcnZlclByb2Nlc3NpbmdVcmwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHNtLWRhdGF0YWJsZScpLmRhdGFzZXQuYWpheF9kYXRhdGFibGVzX3NlcnZlcl9wcm9jZXNzaW5nX3VybFxuICAgIGxldCB0YWJsZSA9IGpRdWVyeSgnI3RzbS1kYXRhdGFibGUnKS5EYXRhVGFibGUoe1xuICAgICAgICBkb206ICc8XCJmbG9hdC1sZWZ0XCJpPjxcImZsb2F0LXJpZ2h0XCJmPnQ8XCJmbG9hdC1sZWZ0XCJsPkI8XCJmbG9hdC1yaWdodFwicD48XCJjbGVhcmZpeFwiPicsXG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgIG9yZGVyOiBbWyAwLCBcImRlc2NcIiBdXSxcbiAgICAgICAgYnV0dG9uczogWydjc3YnLCAnZXhjZWwnLCAncGRmJ10sXG4gICAgICAgIGluaXRDb21wbGV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5hcGkoKS5jb2x1bW5zKCkuZXZlcnkoIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBsZXQgdGhhdCA9IHRoaXNcblxuICAgICAgICAgICAgICAgIGpRdWVyeSggJ2lucHV0JywgdGhpcy5mb290ZXIoKSApLm9uKCAna2V5dXAgY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIHRoYXQuc2VhcmNoKCkgIT09IHRoaXMudmFsdWUgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGF0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNlYXJjaCggdGhpcy52YWx1ZSApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRyYXcoKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuICAgICAgICBwcm9jZXNzaW5nOiB0cnVlLFxuICAgICAgICBzZXJ2ZXJTaWRlOiB0cnVlLFxuICAgICAgICBhamF4OiB7XG4gICAgICAgICAgICB1cmw6IGFqYXhEYXRhdGFibGVzU2VydmVyUHJvY2Vzc2luZ1VybCxcbiAgICAgICAgICAgIHR5cGU6ICdQT1NUJ1xuICAgICAgICB9LFxuICAgICAgICBjb2x1bW5EZWZzOiBbXG4gICAgICAgICAgICB7IFwibmFtZVwiOiBcImlkXCIsIFwidGFyZ2V0c1wiOiAwIH0sXG4gICAgICAgICAgICB7IFwibmFtZVwiOiBcInVybFwiLCBcInRhcmdldHNcIjogMSB9LFxuICAgICAgICBdXG4gICAgfSlcblxuICAgIGNvbnNvbGUubG9nKCdMb2FkZWQgVGhlIFNFTyBNYWNoaW5lIHZpZXchJylcbn1cblxuZnVuY3Rpb24gdHNtU3R1ZHlTaXRlKCkge1xuICAgIGNvbnNvbGUubG9nKCdTdGFydGluZyBzdHVkeSBzaXRlLi4nKVxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0c20tYnRuLXN0dWR5LXNpdGUnKS5pbm5lckhUTUwgPSAnU3RvcCdcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHNtLWJ0bi1zdHVkeS1zaXRlJykuY2xhc3NMaXN0LmFkZCgndHNtLWJ1dHRvbi1zdHVkeWluZycpXG5cbiAgICBsZXQgcXVhbnRpdHlfcGVyX2JhdGNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3F1YW50aXR5X3Blcl9iYXRjaCcpLnZhbHVlXG4gICAgbGV0IHRpbWVfYmV0d2Vlbl9iYXRjaGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpbWVfYmV0d2Vlbl9iYXRjaGVzJykudmFsdWVcbiAgICBjb25zb2xlLmxvZygnUXVhbnRpdHkgcGVyIGJhdGNoOiAnICsgcXVhbnRpdHlfcGVyX2JhdGNoICsgJywgdGltZSBiZXR3ZWVuIGJhdGNoZXM6ICcgKyB0aW1lX2JldHdlZW5fYmF0Y2hlcylcblxuICAgIHRzbV9pbnRlcnZhbF9pZCA9IHNldEludGVydmFsKHRzbVN0dWR5U2l0ZVNlbmRBamF4LCB0aW1lX2JldHdlZW5fYmF0Y2hlcyAqIDEwMDApXG4gICAgdHNtX3N0YXR1cyA9ICdzdHVkeWluZydcbn1cblxuZnVuY3Rpb24gdHNtU3R1ZHlTaXRlU2VuZEFqYXgoKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RzbS1ib3gtc3R1ZHktc2l0ZS1zdGF0dXMnKS5pbm5lckhUTUwgPSAnUHJvY2Vzc2luZy4uJ1xuXG4gICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpXG5cbiAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCkge1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RzbS1ib3gtc3R1ZHktc2l0ZS1zdGF0dXMnKS5pbm5lckhUTUwgPSAnU3R1ZHlpbmcgd2l0aCByZXNwb25zZTogJyArIHhoci5yZXNwb25zZVRleHRcbiAgICAgICAgICAgIGlmKHhoci5yZXNwb25zZVRleHQuaW5jbHVkZXMoJ2ZpbmlzaGVkJykpIHtcbiAgICAgICAgICAgICAgICB0c21TdG9wQWxsKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB4aHIub3BlbignUE9TVCcsICcvd3AtYWRtaW4vYWRtaW4tYWpheC5waHAnKTtcbiAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCcpO1xuICAgIHhoci5zZW5kKCdhY3Rpb249dHNtX2RvX2JhdGNoJyk7XG59XG5cbmZ1bmN0aW9uIHRzbVN0b3BBbGwoKXtcbiAgICBjbGVhckludGVydmFsKHRzbV9pbnRlcnZhbF9pZClcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RzbS1idG4tc3R1ZHktc2l0ZScpLmlubmVySFRNTCA9ICdTdHVkeSBTaXRlJ1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHNtLWJ0bi1zdHVkeS1zaXRlJykuY2xhc3NMaXN0LnJlbW92ZSgndHNtLWJ1dHRvbi1zdHVkeWluZycpXG4gICAgICAgIHRzbV9zdGF0dXMgPSAnc3RvcHBlZCdcbn1cblxuLy8gU3RhcnRzIGFsbCBKUy4uXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdlQXJlSW5UaGVTZW9NYWNoaW5lICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0c21PbkxvYWRNYWluKClcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RzbS1idG4tc3R1ZHktc2l0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRzbV9zdGF0dXMgPT0gJ3N0b3BwZWQnKSB7XG4gICAgICAgICAgICAgICAgdHNtU3R1ZHlTaXRlKClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdHNtU3RvcEFsbCgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxufSlcbiJdfQ==
